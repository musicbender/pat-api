image:
  name: atlassian/pipelines-awscli

definitions:
  steps:
    - step: &build-and-push
        name: Build and push docker image
        deployment: production
        caches:
          - docker
        services:
          - docker
        script:
          - eval $(aws ecr get-login --region ${AWS_DEFAULT_REGION} --no-include-email)
          - export BUILD_ID="$BITBUCKET_BRANCH"_"$BITBUCKET_COMMIT"_"$BITBUCKET_BUILD_NUMBER"
          - docker build -t ${AWS_REGISTRY_URL}:$BUILD_ID -f Dockerfile.prod .
          - docker push ${AWS_REGISTRY_URL}:$BUILD_ID
          - docker tag ${AWS_REGISTRY_URL}:$BUILD_ID ${AWS_REGISTRY_URL}:development
          - docker push ${AWS_REGISTRY_URL}:development
    - step: &deploy
        name: Deploy to K8s
        script:
           # Download the necessary tools to deploy to kubernetes
          - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
          - chmod +x ./kubectl
          - sudo mv ./kubectl /usr/local/bin/kubectl
          # Configure kubectl
          - kubectl config set-cluster <my.cluster.name> --server=<my.kubernetes.host> --certificate-authority=/path/to/ca.pem
          - kubectl config set-credentials <my.user> --username=$KUBERNETES_USERNAME --password=$KUBERNETES_PASSWORD
          - kubectl config set-context <my.context> --cluster=<my.cluster.name> --user=<my.user>
          - kubectl config use-context <my.context>
          # Update the deployment to use the new Docker image
          - kubectl set image deployment/<my.app> <my.app>=<my.dockerhub.username>/<my.app>:$BITBUCKET_COMMIT
        

# pipelines:
#   branches:
#     master:
#       - step: *build-and-push
#       - step: *deploy
