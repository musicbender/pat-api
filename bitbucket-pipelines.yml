pipelines:
  branches:
    master:
      # - step:
      #     name: Build and push docker image
      #     deployment: prod_build
      #     image: atlassian/pipelines-awscli
      #     caches:
      #       - docker
      #     services:
      #       - docker
      #     script:
      #       - eval $(aws ecr get-login --region ${AWS_DEFAULT_REGION} --no-include-email)
      #       - export BUILD_ID="$BITBUCKET_BRANCH"_"$BITBUCKET_COMMIT"_"$BITBUCKET_BUILD_NUMBER"
      #       - export IMAGE_NAME="$AWS_REGISTRY_URL":"$BUILD_ID"
      #       - docker build -t ${IMAGE_NAME} -f Dockerfile.prod .
      #       - docker push ${IMAGE_NAME}
      #       - docker tag ${IMAGE_NAME} ${AWS_REGISTRY_URL}:development
      #       - docker push ${AWS_REGISTRY_URL}:development
      - step:
          name: Get aws secrets and save to artifact
          deployment: prod_get-secrets
          image: node:12.7.0
          caches:
              - node
          script:
            - npm i aws-sdk minimist
            - mkdir config
            - node .deployment/scripts/build-secrets.js --aws-key=${AWS_ACCESS_KEY_ID} --aws-secret=${AWS_SECRET_ACCESS_KEY} -s ${AWS_SECRETS_NAME} -m ${SECRETS_META} -f ./config/secrets.json
          artifacts:
            - config/*
      - step:
          name: Get k8s Credentials
          deployment: prod_k8s-creds
          image: atlassian/default-image:2
          script:
            - mkdir kube
            - echo $KUBE_TOKEN | base64 -d -i > ./kube/kube_token
            - echo $KUBE_CA | base64 -d -i > ./kube/kube_ca
          artifacts:
            - kube/*
            - config/*
      - step:
          name: Deploy to k8s
          image: atlassian/pipelines-kubectl
          deployment: prod_deploy
          script:
            - echo "My region is $AWS_DEFAULT_REGION"
            - export BUILD_ID="$BITBUCKET_BRANCH"_"$BITBUCKET_COMMIT"_"$BITBUCKET_BUILD_NUMBER"
            - export IMAGE_NAME="$AWS_REGISTRY_URL":"$BUILD_ID"
            - kubectl config set-cluster pat-api-k8s --server=https://fcae1d7e-5f25-4d97-b187-b81f25326a71.k8s.ondigitalocean.com --certificate-authority="$(pwd)/kube/kube_ca"
            - kubectl config set-credentials bitbucket --token="$(cat ./kube/kube_token)"
            - kubectl config set-context development --cluster=pat-api-k8s --user=bitbucket
            - kubectl config use-context development
            - kubectl create secret -f ./config/secrets.json
            - kubectl set image deployment/pat-api pat-api=${IMAGE_NAME}


